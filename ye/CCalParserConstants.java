/* Generated By:JJTree&JavaCC: Do not edit this line. CCalParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CCalParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int VARIABLE = 10;
  /** RegularExpression Id. */
  int CONSTANT = 11;
  /** RegularExpression Id. */
  int RETURN = 12;
  /** RegularExpression Id. */
  int INTEGER = 13;
  /** RegularExpression Id. */
  int BOOLEAN = 14;
  /** RegularExpression Id. */
  int VOID = 15;
  /** RegularExpression Id. */
  int MAIN = 16;
  /** RegularExpression Id. */
  int IF = 17;
  /** RegularExpression Id. */
  int ELSE = 18;
  /** RegularExpression Id. */
  int TRUE = 19;
  /** RegularExpression Id. */
  int FALSE = 20;
  /** RegularExpression Id. */
  int WHILE = 21;
  /** RegularExpression Id. */
  int SKIPP = 22;
  /** RegularExpression Id. */
  int COMMA = 23;
  /** RegularExpression Id. */
  int SEMIC = 24;
  /** RegularExpression Id. */
  int COLON = 25;
  /** RegularExpression Id. */
  int ASSIGN = 26;
  /** RegularExpression Id. */
  int LBRACE = 27;
  /** RegularExpression Id. */
  int RBRACE = 28;
  /** RegularExpression Id. */
  int LBR = 29;
  /** RegularExpression Id. */
  int RBR = 30;
  /** RegularExpression Id. */
  int PLUS_SIGN = 31;
  /** RegularExpression Id. */
  int MINUS_SIGN = 32;
  /** RegularExpression Id. */
  int NOT = 33;
  /** RegularExpression Id. */
  int OR = 34;
  /** RegularExpression Id. */
  int AND = 35;
  /** RegularExpression Id. */
  int EQUALS = 36;
  /** RegularExpression Id. */
  int NOT_EQUAL = 37;
  /** RegularExpression Id. */
  int LESS_THAN = 38;
  /** RegularExpression Id. */
  int LESS_EQUAL = 39;
  /** RegularExpression Id. */
  int GREATER_THAN = 40;
  /** RegularExpression Id. */
  int GREATER_EQUAL = 41;
  /** RegularExpression Id. */
  int NUMBER = 42;
  /** RegularExpression Id. */
  int DIGIT = 43;
  /** RegularExpression Id. */
  int ID = 44;
  /** RegularExpression Id. */
  int LETTER = 45;
  /** RegularExpression Id. */
  int OTHER = 46;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "\"/*\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 9>",
    "\"var\"",
    "\"const\"",
    "\"return\"",
    "\"integer\"",
    "\"boolean\"",
    "\"void\"",
    "\"main\"",
    "\"if\"",
    "\"else\"",
    "\"true\"",
    "\"false\"",
    "\"while\"",
    "\"skip\"",
    "\",\"",
    "\";\"",
    "\":\"",
    "\"=\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"+\"",
    "\"-\"",
    "\"~\"",
    "\"||\"",
    "\"&&\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "<NUMBER>",
    "<DIGIT>",
    "<ID>",
    "<LETTER>",
    "<OTHER>",
  };

}
